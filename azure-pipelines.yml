# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main
- develop

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'#
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  major: 0
  minor: 1
  patch: $[counter(variables['minor'], 1)]
  AssemblyVersion: $(major).$(minor).$(patch)

steps:

- task: PowerShell@2
  inputs:
    filePath: 'set-version.ps1'
    arguments: '-newVersion $(AssemblyVersion)'

- task: UseDotNet@2
  displayName: 'Install .NET Core SDK'
  inputs:
    packageType: 'sdk'
    version: '3.1.x'

- task: NuGetToolInstaller@0
  displayName: 'Install NuGet'

- task: DotNetCoreCLI@2
  displayName: 'Build Aporta'
  inputs:
    command: 'build'
    projects: 'src/Aporta.sln'
    arguments: '--configuration $(buildConfiguration)'
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'AssemblyVersion'

- task: DotNetCoreCLI@2
  displayName: 'Unit Test Aporta'
  inputs:
    command: 'test'
    nobuild: true
    projects: '**/*Tests/*.csproj'
    arguments: '--configuration $(buildConfiguration)'
    
- task: ResharperCli@2
  displayName: 'ReSharper Inspection'
  inputs:
    solutionOrProjectPath: 'src/Aporta.sln'
    failBuildLevelSelector: 'Error'
    additionalArguments: '--no-swea'
    
- task: VSBuild@1
  displayName: 'Build Windows Installer'
  inputs:
    solution: 'setup/Windows/SetupProject/SetupProject.wixproj'
    msbuildArchitecture: 'x86'
    configuration: 'Release'
    msbuildArgs: '/p:RunWixToolsOutOfProc=true /p:OutputPath=$(Build.ArtifactStagingDirectory)/Setup/Windows'

- task: AzureKeyVault@1
  inputs:
    azureSubscription: 'Z-bit'
    KeyVaultName: 'Z-bitVault'

- powershell: |
    $filePath = '$(Build.ArtifactStagingDirectory)/Setup/Windows/Aporta.msi';
    $base64 = '$(CodeSigning)';
    $buffer = [System.Convert]::FromBase64String($base64);
    $certificate = [System.Security.Cryptography.X509Certificates.X509Certificate2]::new($buffer);
    $timestampServer = 'http://timestamp.comodoca.com';
    Set-AuthenticodeSignature -FilePath $filePath -Certificate $certificate -TimestampServer $timestampServer;

- task: DotNetCoreCLI@2
  displayName: 'Install dotnet deb packaging tool'
  inputs:
    command: 'custom'
    custom: 'tool'
    arguments: 'install --global dotnet-deb'

- task: DotNetCoreCLI@2
  displayName: 'Install dotnet deb packaging for project'
  inputs:
    command: 'custom'
    custom: 'deb'
    arguments: 'install'

- task: DotNetCoreCLI@2
  displayName: 'Create Debian x64 package'
  inputs:
    command: 'custom'
    custom: 'deb'
    arguments: 'src/Aporta/Aporta.csproj -r linux-x64 -c $(buildConfiguration) -o "$(Build.ArtifactStagingDirectory)/Setup/Linux"'

- task: DotNetCoreCLI@2
  displayName: 'Create Debian ARM package'
  inputs:
    command: 'custom'
    custom: 'deb'
    arguments: 'src/Aporta/Aporta.csproj -r linux-arm -c $(buildConfiguration) -o "$(Build.ArtifactStagingDirectory)/Setup/Linux"'

- task: PublishPipelineArtifact@1
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)'

