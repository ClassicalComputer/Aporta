steps:
- task: PowerShell@2
  inputs:
    filePath: 'set-version.ps1'
    arguments: '-newVersion $(AssemblyVersion)'
    
- task: UseDotNet@2
  displayName: 'Install .NET Core SDK'
  inputs:
    packageType: 'sdk'
    version: '7.x'
    
- task: DotNetCoreCLI@2
  displayName: 'Build Aporta for Linux x64'
  inputs:
    command: 'publish'
    projects: "src/Aporta/Aporta.csproj"
    publishWebProjects: false
    arguments: '-c $(buildConfiguration) -r linux-x64 --self-contained'
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'AssemblyVersion'
    
- task: ShellScript@2
  inputs:
    scriptPath: 'ci/linux_install_amd64.sh'
    disableAutoCwd: true
    args: '$(Build.ArtifactStagingDirectory)/Setup/Linux'
    
- task: DotNetCoreCLI@2
  displayName: 'Build Aporta for Linux arm'
  inputs:
    command: 'publish'
    projects: "src/Aporta/Aporta.csproj"
    publishWebProjects: false
    arguments: '-c $(buildConfiguration) -r linux-arm --self-contained'
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'AssemblyVersion'

- task: ShellScript@2
  inputs:
    scriptPath: 'ci/linux_install_armhf.sh'
    disableAutoCwd: true
    args: '$(Build.ArtifactStagingDirectory)/Setup/Linux'
    
- task: DotNetCoreCLI@2
  displayName: 'Build Aporta for Linux arm64'
  inputs:
    command: 'publish'
    projects: "src/Aporta/Aporta.csproj"
    publishWebProjects: false
    arguments: '-c $(buildConfiguration) -r linux-arm64 --self-contained'
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'AssemblyVersion'

- task: ShellScript@2
  inputs:
    scriptPath: 'ci/linux_install_arm64.sh'
    disableAutoCwd: true
    args: '$(Build.ArtifactStagingDirectory)/Setup/Linux'
    
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)'