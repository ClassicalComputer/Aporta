@page "/extensions"
@using Aporta.Shared.Models
@inject HttpClient Http

<h1>Extensions</h1>

<p></p>

@if (_extensions == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Name</th>
            <th>Enabled</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var extension in _extensions)
        {
            <tr>
                <td>@extension.Name</td>
                <td>
                    <input type="checkbox" checked="@extension.Enabled" @onchange="async eventArgs => await ExtensionEnabledChanged(extension.Id, eventArgs.Value)">   
                </td>               
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private Extension[] _extensions;

    protected override async Task OnInitializedAsync()
    {
        _extensions = await Http.GetFromJsonAsync<Extension[]>("api/extensions");
    }
    
    async Task ExtensionEnabledChanged(Guid extensionId, object checkedValue)
    {
        string url = $"api/extensions/{extensionId}";
        url = QueryHelpers.AddQueryString(url, "enabled", checkedValue.ToString());
        var response = await Http.PostAsync(url, new StringContent(string.Empty));
        if (!response.IsSuccessStatusCode)
        {
            throw new Exception($"Unable to update extension. Response reason - {(int)response.StatusCode}:{response.ReasonPhrase}");
        }
    }
}